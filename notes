Программа linkedAccount

Позволяет иметь аккаунты произвольной длины? Надо ли такое - не ясно


Create - создает аккаунт-ссылку, ведущую на пустой аккаунт
Update - Создает новый аккаунт, наполняет его данными, уничтожает старый, меняет ссылку
UpdateFromNonce - обновляет аккаунт данными из Nonce аккаунта, уничтожает Nonce
Delete - удаляет аккаунт и аккаунт с данными

linkedAccount


linkedAccount - специальный аккаунт со ссылкой и настройкой того, кто может им пользоваться.
Такая программа кажется позволяет не думать о размерах. Аккаунты просто начинают хранить данные, при этом каждый аккаунт хранить темплейт прав.





Программа SolceryContentEngine

32байт должно быть достаточно, но возможно надо использовать хэши
Нужны ли айдишники - неизвестно. Кажется, будто не нужны, когда есть сборка





CreateTemplate - создает аккаунт для темплейта.
Шаблон это айдишник, название и описание структуры объектов

Базово это линейный список тип + значение.

Также шаблон это аккаунт хранилища объектов

Template сводим к объекту или пытаемся



Что такое тип настраивается отдельно




CreateObject - создает объект темплейта.
AddField(str fieldName, int fieldType)
RemoveField(str fieldName, int fieldType)


CreateObject получает в себя бинарные данные нового объекта, валидирует, что эти данные совпадают с шаблоном и сохраняет в новый аккаунт.
UpdateObject получает в себя новые данные объекта и изменяет их
DiffObject получает в себя дифф филдов и накатывает их
	дифф - это подобъект, список филд-новое значение



Что делать, когда шаблон меняется, а объекты есть?
Под изменением шаблона подразумевается изменение структуры филдов.
Дефолтные значния мы не храним, так что при добавлении филда мы не должны ничего делать.
Если удалили филд, то с объектами тоже ничего делать не нужно, он никому не мешает, но должен пропасть на следующем пересохранении



Шаблон это линейный список структур вида
{
	int fieldId 
	str fieldName
	int fieldType
}


Объект шаблона это массив байт, в котором первые 4 это fieldId, а дальше - данные, которые позволяют десериализовать что надо


{
	

}


Пока что типы хардкодим и не делаем вид что шаблоны и объекты это одно и то же. Потом туда сможем



